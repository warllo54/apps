# Default values for fireflyIII.

image:
  repository: fireflyiii/core
  pullPolicy: IfNotPresent
  tag: version-5.5.12@sha256:9a1f87a8ad38694675390756be9686fe9d8ba941fe1f145641626135c7eb5e4b


postgresqlImage:
  repository: bitnami/postgresql
  pullPolicy: IfNotPresent
  tag: 13.4.0@sha256:0fa00d56daee4ab334e0b5aeabfb8674aadc501e498ca13feac5b5fdced4bcba

securityContext:
  privileged: false
  readOnlyRootFilesystem: false
  allowPrivilegeEscalation: true
  runAsNonRoot: false

podSecurityContext:
  runAsUser: 0
  runAsGroup: 0
  fsGroup: 0
  supplementalGroups: []
  fsGroupChangePolicy: "OnRootMismatch"

service:
  main:
    ports:
      main:
        port: 8080

initContainers:
  init-postgresdb:
    image: "{{ .Values.postgresqlImage.repository}}:{{ .Values.postgresqlImage.tag }}"
    command:
      - "sh"
      - "-c"
      - "until pg_isready -U authelia -h ${pghost} ; do sleep 2 ; done"
    imagePullPolicy: IfNotPresent
    env:
      - name: pghost
        valueFrom:
          secretKeyRef:
            name: dbcreds
            key: plainhost

probes:
  liveness:
    path: "/login"

  readiness:
    path: "/login"

  startup:
    path: "/login"

env:
  DB_USERNAME: firefly
  DB_DATABASE: firefly
  DB_CONNECTION: pgsql
  DB_PORT: 5432
  APP_KEY: AGcfkCUS233ZWmBXztYbdyCs2u7kkz55

envValueFrom:
  DB_HOST:
    secretKeyRef:
      name: dbcreds
      key: postgresql_host
  DB_PASSWORD:
    secretKeyRef:
      name: dbcreds
      key: postgresql-password

persistence:
  data:
    enabled: true
    mountPath: "/var/www/html/storage/upload"
    type: pvc
    accessMode: ReadWriteOnce
    size: "100Gi"


# Enabled postgres
postgresql:
  enabled: true
  postgresqlUsername: firefly
  postgresqlDatabase: firefly
  existingSecret: dbcreds
